<Window x:Class="MenuBarExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MenuBarExample"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <SolidColorBrush x:Key="PrimaryBackgroundColor" Color="#f3f3f3"/>
        <SolidColorBrush x:Key="SecondaryBackgroundColor" Color="#f9f9f9"/>

        <!-- Primary Colors -->
        <SolidColorBrush x:Key="PrimaryBlueColor" Color="#5B7FFF"/>
        <SolidColorBrush x:Key="PrimaryBlueColorA" Color="#3063ab"/>
        <SolidColorBrush x:Key="PrimaryGrayColor" Color="#BFBFC4"/>

        <SolidColorBrush x:Key="SecondaryBlueColor" Color="#CEE8FB"/>
        <SolidColorBrush x:Key="SecondaryBlueColorA" Color="#dfedf9"/>
        <SolidColorBrush x:Key="SecondaryGrayColor" Color="#EEEEEE"/>
        <SolidColorBrush x:Key="SecondaryRedColorA" Color="#FF5555"/>

        <Style x:Key="RadioMenuStyle" TargetType="RadioButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#f9f9f9"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="menuButton"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="45"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <!-- Selected  -->
                                <Border x:Name="btnSelected" Grid.ColumnSpan="2"  CornerRadius="4" Width="210" HorizontalAlignment="Right"/>

                                <!-- Indicator -->
                                <Rectangle Name="Indicator" HorizontalAlignment="Left" Width="4" Height="40" VerticalAlignment="Center" RadiusX="2" RadiusY="2"/>

                                <!-- Icon -->
                                <Path x:Name="Icon" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Height="24" Width="24" Stretch="Fill" Fill="{DynamicResource PrimaryGrayColor}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 5 0"/>

                                <!-- Text -->
                                <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="12 0 0 0"
                                                Grid.Column="1" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                FontSize="{TemplateBinding FontSize}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
                                <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>
                                <!-- Optional 
                            <Setter TargetName="Indicator" Property="Fill" Value="red"/>
                            <Setter TargetName="Indicator" Property="Height" Value="20"/>-->
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>
                                <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>
                                <Setter TargetName="Indicator" Property="Height" Value="20"/>
                                <Setter TargetName="btnSelected" Property="Background" Value="{DynamicResource SecondaryGrayColor}"/>
                                <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid x:Name="gridMenu" Width="60" Background="#f9f9f9">
            <Grid.RowDefinitions>
                <RowDefinition Height="60"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <ToggleButton Margin="0,0,15,0" Content="切换" Width="30" Height="30" HorizontalAlignment="Right">
                <ToggleButton.Triggers>
                    <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="gridMenu" Storyboard.TargetProperty="Width">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="200">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="60">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="ToggleButton.Checked">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="gridMenu" Storyboard.TargetProperty="Width">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="60">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="200">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ToggleButton.Triggers>
            </ToggleButton>
            <StackPanel Grid.Row="1">
                <RadioButton Content="用户" IsChecked="True" Style="{StaticResource RadioMenuStyle}"></RadioButton>
                <RadioButton Content="参数设置" Style="{StaticResource RadioMenuStyle}"></RadioButton>
            </StackPanel>
        </Grid>

    </Grid>
</Window>
